#!/bin/sh

# Configuration
STRIKE_API_URL="https://api.strike.me/v1"
STRIKE_API_KEY="<your-strike-api-key>"

is_uint() {
    case "$1" in
        ''|*[!0-9]*)
            return 1
        ;;
        *)
            return 0
        ;;
    esac
}

# Validate an invoice using Strike
strike_check() {
    if [ "$#" -lt 2 ]; then
        echo "error: not enough parameters" >&2
        return 1
    fi
    invoice_id="$1"
    expected_amount="$2"

    # Fetch invoice details
    response=$(curl -s -H "Authorization: Bearer $STRIKE_API_KEY" \
                     -H "Accept: application/json" \
                     "$STRIKE_API_URL/invoices/$invoice_id")

    invoice_amount=$(echo "$response" | jq -r '.amount.amount')
    state=$(echo "$response" | jq -r '.state')

    if [ "$state" != "PAID" ]; then
        echo "error: invoice is not paid. Current state: $state" >&2
        return 1
    fi

    if [ "$invoice_amount" != "$expected_amount" ]; then
        echo "error: invoice amount mismatch. Expected: $expected_amount, Actual: $invoice_amount" >&2
        return 1
    fi

    echo "Invoice validated successfully."
    return 0
}

# Pay an invoice using Strike
strike_pay() {
    if [ "$#" -lt 1 ]; then
        echo "error: not enough parameters" >&2
        return 1
    fi
    invoice="$1"

    # Step 1: Generate a payment quote
    quote_response=$(curl -s -X POST "$STRIKE_API_URL/payment-quotes/lightning" \
                         -H "Authorization: Bearer $STRIKE_API_KEY" \
                         -H "Content-Type: application/json" \
                         -d "{\"lnInvoice\": \"$invoice\", \"sourceCurrency\": \"BTC\"}")

    payment_quote_id=$(echo "$quote_response" | jq -r '.paymentQuoteId')
    if [ -z "$payment_quote_id" ]; then
        echo "error: failed to generate payment quote." >&2
        return 1
    fi

    # Step 2: Execute the payment quote
    execute_response=$(curl -s -X PATCH "$STRIKE_API_URL/payment-quotes/$payment_quote_id/execute" \
                              -H "Authorization: Bearer $STRIKE_API_KEY")

    if [ "$(echo "$execute_response" | jq -r '.state')" != "COMPLETED" ]; then
        echo "error: payment execution failed." >&2
        return 1
    fi

    echo "Payment executed successfully."
    return 0
}

# Generate an invoice using Strike
strike_invoice() {
    if [ "$#" -lt 3 ]; then
        echo "error: not enough parameters" >&2
        return 1
    fi
    amount="$1"
    currency="$2"
    description="$3"

    response=$(curl -s -X POST "$STRIKE_API_URL/invoices" \
                     -H "Authorization: Bearer $STRIKE_API_KEY" \
                     -H "Content-Type: application/json" \
                     -d "{\"amount\": {\"amount\": \"$amount\", \"currency\": \"$currency\"}, \"description\": \"$description\"}")

    invoice_id=$(echo "$response" | jq -r '.invoiceId')
    if [ -z "$invoice_id" ]; then
        echo "error: failed to create invoice." >&2
        return 1
    fi

    echo "$invoice_id"
    return 0
}

# Main entry point
if [ "$#" -lt 1 ]; then
    echo "error: insert action" >&2
    return 1
fi
action="$1"
shift 1

case "$action" in
    check)
        strike_check "$@"
    ;;
    pay)
        strike_pay "$@"
    ;;
    invoice)
        strike_invoice "$@"
    ;;
    *)
        echo "error: action $action not available" >&2
        exit 1
    ;;
esac
